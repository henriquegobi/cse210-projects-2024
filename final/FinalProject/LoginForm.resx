<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEAIABoBAAANgAAACAgAAABACAAqBAAAJ4EAAAoKAAAAQAgAAACAABGFQAAKAAAABAA
        AAAgAAAAAQAgAAAAAAAwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA/wAA
        AAAAAACwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJAAAAAAAAAAAAAAAAAAAABAAAAAzwAA
        ABAAAAAAAAAAgAAAALAAAAAAAAAAAAAAALAAAACAAAAAAAAAABAAAADPAAAAQAAAAAAAAAAAAAAAQAAA
        AMAAAAAAAAAAAAAAABAAAAC/AAAA/wAAAP8AAAC/AAAAEAAAAAAAAAAAAAAAwAAAAEAAAAAAAAAAAAAA
        AEAAAADAAAAAAAAAAAAAAAAAAAAAEAAAAJAAAACQAAAAEAAAAAAAAAAAAAAAAAAAAMAAAABAAAAAAAAA
        AAAAAABAAAAAwAAAAAAAAAAAAAAAAAAAAJAAAACfAAAAnwAAAJAAAAAAAAAAAAAAAAAAAADAAAAAQAAA
        AAAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAAAAAACQAAAAoAAAAKAAAACQAAAAAAAAAAAAAAAAAAAAwAAA
        AEAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAAAAAAAAEAAAAI8AAACPAAAAEAAAAAAAAAAAAAAAAAAA
        AMAAAABAAAAAAAAAAAAAAABAAAAA0AAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAIAAA
        AAAAAADAAAAAQAAAAAAAAAAAAAAAQAAAAO8AAAC/AAAAvwAAAL8AAAC/AAAAvwAAAL8AAAC/AAAAvwAA
        AGAAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIAAAAAgAAAAYAAAAMAAAABAAAAAAAAAAAAAAABAAAAA0AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABAAAAAEAAAADAAAADQAAAAQAAAAAAAAAAAAAAAAAAAAJAAAAD/AAAAwAAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAMgDAADZmwAA3DsAAN57
        AADcOwAA3DsAAN57AADf+wAAwBsAAN/bAADf+wAAxAMAAP//AAD//wAAKAAAACAAAABAAAAAAQAgAAAA
        AACAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABAAAACgAAAA4AAAANAAAAAAAAAAAAAAADAAAADwAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOAAAACgAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAA0AAAAP8AAAD/AAAAzwAAAAAAAAAAAAAAQAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAD/AAAAzwAAACAAAAAAAAAAAAAAAAAAAAAwAAAA/wAA
        AOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA/wAAADAAAAAAAAAAAAAAAAAAAAAgAAAAzwAA
        AP8AAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAP8AAABgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADgAAAA/wAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAoAAAAP8AAADfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABgAAAA/wAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA/wAAAEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAADAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEAAAAD/AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAD/AAAAQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACvAAAA7wAAAP8AAAD/AAAA7wAAAK8AAAAwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAP8AAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAA
        AP8AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAA/wAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADAAAAA/wAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAPAAAAD/AAAA/wAA
        APAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAD/AAAAwAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAMAAAAD/AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADwAAAA/wAA
        AM8AAADPAAAA/wAAAOAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAP8AAADAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAP8AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAA
        AP8AAADPAAAAAAAAAAAAAADQAAAA/wAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAA/wAA
        AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA/wAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABAAAAA/wAAANAAAAAAAAAAAAAAANAAAAD/AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEAAAAD/AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAD/AAAAQAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABAAAADvAAAA/wAAANAAAADQAAAA/wAAAN8AAAAQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAQAAAAP8AAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAP8AAABAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADvAAAA/wAAAP8AAADvAAAAMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABAAAAA/wAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA/wAA
        AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAPwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAD/AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMAAAAD/AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAP8AAADAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAwAAAAP8AAADQAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAA
        AMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAKAAAAAgAAAAAAAAAAAAAABAAAAA/wAAAMAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAEAAAAAAAAAAAAAAAEAAAAD/AAAAwAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAD/AAAAbwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAAAAAAAAAAAAAAAAAQAAA
        AP8AAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAP8AAABAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAQAAAAQAAA
        AAAAAABAAAAA/wAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAA/wAAAEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAADwAAAAAAAA
        AJAAAAD/AAAAQAAAAEAAAAD/AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAD/AAAAYAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAA
        AHAAAAAAAAAAQAAAAI8AAAAQAAAAYAAAAP8AAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAA
        AP8AAADQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADQAAAA/wAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQAAAAzwAAAP8AAAD/AAAA/wAAAP8AAABQAAAAAAAAAAAAAADgAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAAnwAAAN8AAAD/AAAA/wAAAFAAAAAAAAAAAAAAAOAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADfAAAAnwAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////+OAAH/Dg
        AA/z5+fP5+PH5+fwD+fn+B/n5///5+f8P+fn+B/n5/mf5+f5n+fn+B/n5/w/5+f//+fn///n4AAB5+AA
        Aefn///n5///5+f/8mfn//9n8///z/BwAA/4cAAf/////////////////////4lQTkcNChoKAAAADUlI
        RFIAAAAoAAAAKAgGAAAAjP64bQAAAARnQU1BAACxjwv8YQUAAAG3SURBVFhH7Zf/NQUxEIW3BCUoQQlK
        0AEd0AEd0AEd0AEdUIIO6ID5nnOfMWI3ieTs/pF7zne8TfJ27huTX9PQ0FC9zoxn48NxY3i9GL6/BmKc
        GkW6M1IvezWkQyM1ppZbI0snhr6EoSvHkeHFWN9fAzEU79hY1IPB4HfjgIbOIgaxiEnsRT0ZDOZvK5Gp
        R4OyQNQ3z8pYUcweBpWhi93TdwxNutUNqlZVMmQOc6rp1Q0uqcrgm0GdtObciKoy2BNNFqnKIIXN59aw
        CUTRXmwwa3AjDYOIxZf9FEo3/64GWdviqQdoy90quxr0Jx8mlnYNSE2IlLoalBm/0evAATnqZtCfCalB
        ic9qj2teSt0MIhm53z19aTMZRL4G2R5Bz5uoQWZq6m5C2yZmsUTdcYQCX4856mqQLLEwXwZoWz2DZMrX
        XIS+nGx2Mcjx3ZuZY8lkc4N+/WPn4EgfhSntKmRybj0sMqg1jJf+VUM+e3N3Wfo0ThemKGKoTLKunf7i
        zhevjWjCr31xckQ0jsND7OPdMgdzP/aHvAHgJV76l7Qkd1HfixrSAhxT7+vrvxAjZ6YPDQ391jR9AqVm
        jQJTC5F/AAAAAElFTkSuQmCC
</value>
  </data>
</root>